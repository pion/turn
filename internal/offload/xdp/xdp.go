// SPDX-FileCopyrightText: 2023 The Pion community <https://pion.ly>
// SPDX-License-Identifier: MIT

//go:generate go run github.com/cilium/ebpf/cmd/bpf2go -cflags "-Wall -O2" bpf xdp.c -- -I./headers

// Package xdp package implements the XDP offload.
package xdp

import "github.com/cilium/ebpf"

type (
	// BpfObjects is the exposed internal bpfObjects generated by bpf2go.
	// Original description: bpfObjects contains all objects after they have been loaded into the kernel.
	BpfObjects = bpfObjects

	// BpfFourTuple holds a 4-tuple: local IP and port, remote IP and port.
	// Used by the XDP offload in its eBPF maps.
	BpfFourTuple = bpfFourTuple

	// BpfFourTupleWithChannelId holds a 4-tuple and a channel number.
	// Used by the XDP offload in its eBPF maps.
	//
	//nolint:stylecheck,revive
	BpfFourTupleWithChannelId = bpfFourTupleWithChannelId

	// BpfFourTupleStat contains statistics (num bytes, num packets) of
	// forwarded traffic by 4-tuples.
	// Used by the XDP offload in its eBPF maps.
	BpfFourTupleStat = bpfFourTupleStat
)

// BpfMapPinPath is the path where eBPF maps will be pinned
const BpfMapPinPath = "/sys/fs/bpf"

// IsInitialized is a package local variable
//
//nolint:gochecknoglobals
var IsInitialized bool

// LoadBpfObjects is the exposed internal loadBpfObjects generated by bpf2go.
// Original description: loadBpfObjects loads bpf and converts it into a struct.
func LoadBpfObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	return loadBpfObjects(obj, opts)
}
